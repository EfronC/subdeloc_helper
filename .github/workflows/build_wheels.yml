# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
        - [ubuntu-20.04, manylinux_x86_64]
        - [ubuntu-20.04, manylinux_i686]
        - [windows-2019, win_amd64]
        - [windows-2019, win32]
        python: ["cp36", "cp37", "cp38", "cp39", "cp310", "cp311"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies (Windows)
        if: contains(matrix.buildplat[0], 'windows')
        run: |
          # Alternative Windows method using vcpkg
          git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg install libass
          C:\vcpkg\vcpkg install jsoncpp

      - name: Install dependencies (Linux)
        if: contains(matrix.buildplat[0], 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libass-dev libjsoncpp-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.1
        with:
          output-dir: wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_SKIP: "cp34-* cp35-*"
          CIBW_BEFORE_BUILD: |
            pip install --upgrade pip
            pip install setuptools==59.6.0 wheel cython
          CIBW_ENVIRONMENT_WINDOWS: >
            INCLUDE="C:\vcpkg\installed\x64-windows\include"
            LIB="C:\vcpkg\installed\x64-windows\lib"
          CIBW_ENVIRONMENT: >
            LDFLAGS="-L${VCPKG_ROOT:-/usr/local}/installed/x64-windows/lib"
            CPPFLAGS="-I${VCPKG_ROOT:-/usr/local}/installed/x64-windows/include"

      - name: Show generated wheels
        run: ls wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: built-wheels
          path: ./wheelhouse/*.whl
